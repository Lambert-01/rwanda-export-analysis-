# Rwanda Export Explorer - Environment Configuration Template
# Copy this file to .env and update the values as needed for your environment

# ========================================
# SERVER CONFIGURATION
# ========================================

# Frontend Server Port (main server.js)
# The frontend server serves the web interface and proxies API requests to backend
PORT=3001

# Backend API Server Port
# The backend server provides the API endpoints for trade data
BACKEND_PORT=3000

# Node Environment (development/production)
NODE_ENV=development

# ========================================
# PYTHON ENVIRONMENT
# ========================================

# Python executable path (if not in PATH)
# PYTHON_PATH=python

# Virtual environment path (if using virtual environment)
# VIRTUAL_ENV_PATH=./venv

# ========================================
# DATA PROCESSING
# ========================================

# Data directory paths
DATA_RAW_PATH=./data/raw
DATA_PROCESSED_PATH=./data/processed

# Excel file to analyze (if different from default)
# EXCEL_FILE_PATH=./data/raw/2024Q4_Trade_report_annexTables.xlsx

# Analysis cache settings
CACHE_ENABLED=true
CACHE_DURATION_HOURS=1

# ========================================
# API CONFIGURATION
# ========================================

# API Base URL for frontend to backend communication
API_BASE_URL=http://localhost:3000

# Request timeout in milliseconds
API_TIMEOUT=30000

# Maximum file upload size for Excel files (in MB)
MAX_FILE_SIZE=50

# ========================================
# LOGGING
# ========================================

# Log level (error/warn/info/debug)
LOG_LEVEL=info

# Enable detailed logging
DEBUG_MODE=true

# Log file path (if file logging is needed)
# LOG_FILE_PATH=./logs/app.log

# ========================================
# SECURITY
# ========================================

# CORS settings
CORS_ORIGIN=http://localhost:3001

# API Rate limiting (requests per minute)
RATE_LIMIT=100

# ========================================
# DEVELOPMENT SETTINGS
# ========================================

# Auto-reload on file changes
AUTO_RELOAD=true

# Enable source maps for debugging
SOURCE_MAPS=true

# ========================================
# PRODUCTION SETTINGS (uncomment for production)
# ========================================

# Production domain
# DOMAIN=https://your-domain.com

# SSL/TLS settings (for production)
# SSL_CERT_PATH=./certs/cert.pem
# SSL_KEY_PATH=./certs/key.pem

# Database connection (if needed in future)
# DATABASE_URL=postgresql://username:password@localhost:5432/rwanda_exports

# Redis cache (if needed for production)
# REDIS_URL=redis://localhost:6379

# ========================================
# ADDITIONAL CONFIGURATION
# ========================================

# Analysis batch size for large datasets
BATCH_SIZE=1000

# Enable AI predictions
AI_PREDICTIONS_ENABLED=true

# Chart colors theme
CHART_THEME=default

# Export format preferences
DEFAULT_EXPORT_FORMAT=pdf

# ========================================
# OPENAI CONFIGURATION
# ========================================

# OpenAI API Key (get from https://platform.openai.com/api-keys)
# Leave empty to use static responses, or add your key for AI features
OPENAI_API_KEY=

# OpenAI Base URL (optional - defaults to OpenAI's official API)
# OPENAI_BASE_URL=https://api.openai.com/v1

# Alternative: Use OpenRouter for free access (get key from https://openrouter.ai/keys)
# OPENAI_API_KEY=sk-or-v1-your-key-here
# OPENAI_BASE_URL=https://openrouter.ai/api/v1

# OpenAI Model Settings
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7

# Enable/disable AI features
AI_CHAT_ENABLED=true
AI_ANALYSIS_ENABLED=true
AI_PREDICTIONS_ENABLED=true

# ========================================
# SETUP INSTRUCTIONS
# ========================================
#
# To enable AI features:
#
# 1. Copy this file to .env
# 2. Add your OpenAI API key: OPENAI_API_KEY=sk-your-key-here
# 3. Or use OpenRouter for free access: get key from https://openrouter.ai/keys
# 4. Restart the server
#
# Without an API key, the system will use static fallback responses.
#
# ========================================